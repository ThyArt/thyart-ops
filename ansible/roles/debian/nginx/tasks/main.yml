---
# tasks file for roles/debian/nginx

- name: remove apache2
  apt:
    package:
      - apache2
    state: absent
    purge: yes
    autoremove: yes

- name: install nginx
  apt:
    package:
      - nginx

- name: install botocore
  pip:
    name:
      - botocore
      - boto3

- name: create the local nginx conf folder
  file:
    path: /etc/nginx/conf.d
    state: directory
    recurse: yes

- name: create the local nginx ssl folder
  file:
    path: /etc/nginx/ssl
    state: directory
    recurse: yes

- name: Get server certificates
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    bucket: "{{ aws_s3_bucket }}"
    object: /ssl/{{ certname }}/fullchain.pem
    dest: /etc/nginx/ssl/{{ certname }}.fullchain.pem
    mode: get
    encrypt: false
    overwrite: different
  notify: reload nginx

- name: Get server key
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    bucket: "{{ aws_s3_bucket }}"
    object: /ssl/{{ certname }}/privkey.pem
    dest: /etc/nginx/ssl/{{ certname }}.privkey.pem
    mode: get
    encrypt: false
    overwrite: different
  notify: reload nginx

- file:
    path: /etc/nginx/ssl/{{ certname }}.fullchain.pem
    mode: 0400

- file:
    path: /etc/nginx/ssl/{{ certname }}.privkey.pem
    mode: 0400

- name: Create server directory
  file:
    path: "{{ nginx_server_dir }}"
    state: directory
    mode: '0744'
    recurse: yes
    owner: www-data
    group: www-data

- name: Manage nginx.conf
  template:
    src: "{{ nginx_config_file_template }}"
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: enable nginx
  systemd:
    name: nginx
    state: started
    enabled: yes

- name: enable datadog monitoring
  template:
    src: "../templates/server.status.conf.j2"
    dest: /etc/nginx/conf.d/status.conf
